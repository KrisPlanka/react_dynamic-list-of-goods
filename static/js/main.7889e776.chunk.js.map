{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","memo","goods","style","marginTop","map","good","color","name","id","getAll","fetch","then","response","json","App","useState","setGoods","handleTableRender","getGoods","a","className","breakpoint","size","spaced","weight","renderAs","onClick","sort","b","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"wQAOaA,EAA6BC,gBAAK,gBAAGC,EAAH,EAAGA,MAAH,OAC7C,oBAAIC,MAAO,CAAEC,UAAW,QAAxB,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRH,MAAO,CAAEI,MAAOD,EAAKC,OAHvB,SAKGD,EAAKE,MAJDF,EAAKG,YCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICFMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOd,EAAP,KAAce,EAAd,KAEMC,EAAiB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,kEACxBH,EADwB,SACTE,EADS,6EAAH,sDAIvB,OACE,qBAAKE,UAAU,MAAf,SACE,eAAC,YAAD,CAAWC,WAAW,SAAtB,UACE,cAAC,UAAD,CACEC,KAAM,EACNC,QAAM,EACNC,OAAO,QAHT,mCAOA,cAAC,SAAD,CACElB,MAAM,mBACNmB,SAAS,OACT,UAAQ,aACRC,QAAS,kBAAMT,EAAkBR,MAJnC,4BAQA,cAAC,SAAD,CACEH,MAAM,gBACNmB,SAAS,OACT,UAAQ,oBACRC,QAAS,kBAAMT,ED1BhBR,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAM0B,MAAK,SAACR,EAAGS,GAAJ,OAAUT,EAAEZ,KAAKsB,cAAcD,EAAErB,SACxDuB,MAAM,EAAG,QCoBR,gCAQA,cAAC,SAAD,CACExB,MAAM,kBACNmB,SAAS,OACT,UAAQ,aACRC,QAAS,kBAAMT,ED5BhBR,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAM8B,QAAO,SAAA1B,GAAI,MAAmB,QAAfA,EAAKC,cCuBrC,4BAQA,cAACP,EAAD,CAAWE,MAAOA,U,OC7C1B+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.7889e776.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = memo(({ goods }) => (\n  <ul style={{ marginTop: '20px' }}>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\nimport { Button, Container, Heading } from 'react-bulma-components';\nimport { GoodsList } from './GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const handleTableRender = async (getGoods: Promise<Good[]>) => {\n    setGoods(await getGoods);\n  };\n\n  return (\n    <div className=\"App\">\n      <Container breakpoint=\"fullhd\">\n        <Heading\n          size={1}\n          spaced\n          weight=\"light\"\n        >\n          Dynamic list of Goods\n        </Heading>\n        <Button\n          color=\"success is-light\"\n          renderAs=\"span\"\n          data-cy=\"all-button\"\n          onClick={() => handleTableRender(getAll())}\n        >\n          Load all goods\n        </Button>\n        <Button\n          color=\"info is-light\"\n          renderAs=\"span\"\n          data-cy=\"first-five-button\"\n          onClick={() => handleTableRender(get5First())}\n        >\n          Load 5 first goods\n        </Button>\n        <Button\n          color=\"danger is-light\"\n          renderAs=\"span\"\n          data-cy=\"red-button\"\n          onClick={() => handleTableRender(getRedGoods())}\n        >\n          Load red goods\n        </Button>\n        <GoodsList goods={goods} />\n      </Container>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}